--[[
          ...                               .---:                                                                                             
         .%%%-                             *%%%#*                                                 :===                                        
         .%%%-    .::.  ... ...      ... .=%%%:.. ...     ..     .:.        .:..       .:.  ...  .=%%#..     ..:.      ...  .:                
         .%%%-  =#%%%%%*%%% -%%#    -%%#.*%%%%%%*.%%%.   *%%+ .*%%%%%+   -*%%%%%#=  :*%%%%%*%%%-.%%%%%%%: .+#%%%%%*-  :%%%:#%%:               
         .%%%- *%%#-::=#%%%  =%%*  .#%%: .=%%#....%%%.   *%%+ =%%#      *%%*-::=*=.:%%%=::-*%%%- .=%%#.. :%%%=::-#%%+ :%%%#+--                
         .%%%-.%%%:    :%%%   *%%= *%%-   -%%#   .%%%.   *%%+  +#%%#*- .%%%.       +%%+     #%%-  -%%#   *%%=    .%%%.:%%%:                   
    :=: .=%%%. #%%+   .*%%%    #%%*%%=    -%%#   .%%%-  .#%%+      *%%+ #%%=   :-. =%%#:   -%%%-  -%%#   =%%#.   +%%# :%%%                    
   -%%%%%%%%-  .*%%%##%%%%%    .#%%%+     -%%#    +%%%##%#%%+ =%%#*#%%- .*%%%#%%%*. =%%%##%%%%%-  .#%%%#: =#%%%#%%%+. :%%%                    
     :====:      .-===:.---     =%%*      .---     .-==-.:--:  .-===-      -===-.     :===- ---.    -==-    :-===:    .---                    
                               :%%#.                                                                                                          
                               ===.                                                                                                           
--]]

-- Jayfuscator V1.2.1 --

return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,ba,bb,bb,bb)local bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp=79,54,16,10,35,98,93,41,30,37,90,85,78,94,16,61,29,86,28,58,76,56,95,98,40,74,48,85,77,38,20,72,82,45,34,96,21,87,73,33,67,33,66,78,14,24,71,87,24,58,55 while bb~=64 do if bc<=766 then if bc>=415 then if bc>=573 then if bc>=686 then if bc>=732 then if bc<760 then bc=766 do bz=blfunction(cq,cr,cr)return cf[bg(cq,16)]end)end else bc=814 cj={{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,},{1,0,3,2,5,4,7,6,9,8,f,10,13,12,15,14,},{2,3,0,1,6,c,4,5,10,q,8,9,14,15,12,e,},{3,2,1,m,7,6,5,4,11,10,9,8,15,r,13,12,},{4,5,6,7,0,1,2,3,12,13,14,15,8,9,10,11,},{5,4,7,6,1,0,3,2,13,12,15,14,9,8,11,10,},{6,7,4,5,2,3,0,1,14,15,h,13,10,11,8,9,},{7,6,5,4,3,2,1,0,15,14,13,12,11,10,9,8,},{8,9,10,11,p,13,14,15,0,1,2,3,4,5,6,7,},{9,8,11,10,13,12,15,14,1,0,3,2,5,4,7,6,},{10,11,8,9,14,15,12,13,2,3,0,1,6,7,4,5,},{11,10,9,8,15,14,n,12,3,u,1,0,7,6,5,b,},{12,13,14,15,8,9,10,11,4,5,6,7,0,1,2,3,},{13,12,15,14,9,8,11,10,5,4,7,6,1,0,3,2,},{14,15,12,13,10,11,8,9,6,7,4,o,2,3,0,1,},{15,14,13,12,11,k,9,8,7,6,5,4,3,2,1,0,},nil}end else for b=0,255 do do cf[b]=bs(b);end end bc=732 end else if bc>=620 then if bc<645 then bc=648 bg=tonumber else bc=686 cf={}end else bp=(unpack or table.unpack)bc=620 end end else if bc>=472 then if bc<=472 then co=(function(b,c)if not(ck(b)~='number')then do return true end else return false end end)bc=500 else if bc>502 then bc=573 do cb=math.floor end else do bj=math.abs end bc=547 end end else if bc>421 then bc=472 do ck=type end else be=select bc=452 end end end else if bc>=208 then if bc>=311 then if bc<=311 then bc=338 cn=math.ldexp else if bc<377 then cg=(getfenv or function()return _ENV end)bc=380 else bc=415 do bu=setmetatable end end end else if bc>=251 then if bc<261 then cd=table.concat bc=269 else cl=table.insert bc=311 end else bc=251 bn=string.rep end end else if bc>=136 then if bc>=159 then if bc>163 then bc=208 bl=string.gsub else bh=string.sub bc=186 end else bc=159 do bs=string.char end end else if bc<83 then bc=91 bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp=nil else bc=136 bi=string.byte end end end end else if bc>=1212 then if bc<=1357 then if bc>=1296 then if bc>=1314 then if bc>1316 then bx={}bc=1388 else bq=function(...)return{...},be('#',...)end bc=1357 end else cc=function(b,b,b)local b,c,e,f=65,56,77,73,61,92,81,87,31,99,51,11,88 while b~=44 do if c<=90 then if c<=56 then c=73 e,f=nil else if c<81 then f=by()c=90 else e=bz:sub(ca,(ca+f-1))c=108 end end else if c<=108 then c=157 ca=(ca+f);else if c>159 then b=44;else c=192 return e;end end end end end bc=1314 end else if bc>1218 then bc=1296 ce=function()local b,c,e,f,h,k,m,n=66,70,63,39,28,66,20,74,97,12,57,55,82,66,91,52,23 while b~=47 do if c<=197 then if c>=109 then if c<=109 then c=154 f=by()else if c<190 then if((e==0 and f==0))then return 0 end c=197 else k=((-1)^bv(31,f,1))c=241 end end else if c<86 then e,f,h,k,m,n=nil c=89 else e=by()c=109 end end else if c<=295 then if c<=241 then c=259 m=bv(a,f,11)else if c<290 then h=(bv(0,f,20)*4294967296+e)c=295 else c=323 n=1 end end else if c>=361 then if c>365 then b=47;else c=383 return(k*(2^(m-1023))*(h/ch+n))end else c=361 if not(m~=0)then do if not(h==0)then m=1 n=g else return(k*0)end end elseif not(m==2047)then else if not(h~=i)then do return(k*(0/0))end else do return(k*(1/0))end end end end end end end end else bc=1260 cp=function()local a,b b,a=bi(bz,ca,(ca+2))ca=(ca+2);return((a*256)+b);end end end else if bc>=1500 then if bc<=1500 then ci=function(a,b,c,e)local e,f,g,h,i do h=a[134]end e=a[153]do g=a[174]end i=br f=a[39]return function(...)local a,i,k,m,n,o,p,q,r n=1 p=-1 m=-1 do o={}end i={...}k=(be('#',...)-1)q={}r={}for m=d,k do if(not(m<e))then o[(m-e)]=i[(m+1)];else r[m]=i[(m+1)];end;end;a=(k-e+1)while true do local a,d,e,i,k,m,o,u,be,bg u=h[n]do e=u[158]end i=u[194]d=u[110]m=u[172]k=u[7]o=u[198]bg=u[x]be=u[108]a=u[109]do if not(e<24)then if not(e<36)then if not(e>l)then do if not(u[158]>38)then do if not(e>36)then r[d]=nil;else if(e>37)then local a,h,i i=d h=r[i]a=r[(i+2)]if((a>0))then if((h>r[i+1]))then n=be;else r[(i+3)]=h;end elseif((h<r[i+1]))then n=be;else r[(i+3)]=h;end else do return r[d]end end end end else if not(e<40)then if(e<41)then r[d]=(r[be]*g[k]);else r[d]=(not(be==0));end else b[be]=r[d];end end end else if not(e<45)then if not(e<47)then if not(e~=47)then local a,h,i i=d h=r[(i+2)]a=(r[i]+h)do r[i]=a;end if((h>0))then while(a<=r[i+1])do n=be;r[i+3]=a;break end elseif(not(a<r[i+1]))then n=be;r[(i+ba)]=a;end else r[d]=r[be];end else do if(e>45)then r[d]=ci(f[u[108]],nil,c);else r[d]=#r[be];end end end else if not(e>42)then if not r[d]then n=be;end;else if(e>43)then local a,h,i,l,o o=d l=u[7]h=(o+2)a={r[o](r[o+1],r[h])}for x=1,l do r[(h+x)]=a[x]end i=r[(o+3)]if i then r[h]=i else do n=u[108];end end;else local a,h,i,l a=d l,i=bq(r[a](r[(a+1)]))p=(i+a-1)h=0 for i=a,p do h=(h+1);r[i]=l[h];end;end end end end else if not(e<30)then if not(e>32)then do if not(e>30)then if(not(r[d]==g[k]))then n=be;end;else do if(e<32)then local a a=d do r[a]=r[a](r[a+1]);end else r[d]=(r[u[108]]-r[u[7]]);end end end end else if not(e<34)then do if(e>34)then r[u[110]]=c[g[be]];else do r[u[110]]=(r[be]+r[k]);end end end else local a,h,i h=d a={r[h](bp(r,h+1,p))}do i=0 end for l=h,k do i=(i+1);r[l]=a[i];end end end else do if not(e<27)then do if not(u[158]<28)then if not(e~=28)then r[d]=(r[be]+g[u[7]]);else local a a=d r[a](bp(r,(a+1),be))end else g=br[d](g)end end else if not(e<25)then if not(e~=25)then n=be;else do if((g[d]<r[k]))then do n=be;end end;end end else r[d][g[be]]=r[u[7]];end end end end end else do if not(u[158]>11)then if not(e>5)then do if not(u[158]<3)then if not(e>3)then if(r[k]~=r[u[j]])then do n=be;end end;else if(e>4)then local a,h h=be a=r[h]for i=(h+1),k do do a=(a..r[i]);end end;r[d]=a;else do while r[d]do n=be;break end end end end else if not(e>0)then local a,h,i i=d a=r[i]do h=be end for j=1,h do a[j]=r[(i+j)]end;else do if(e>1)then r[d]=(not r[be]);else local a a=d r[a](r[(a+1)])end end end end end else if not(e<9)then if not(e>9)then r[d]=r[be][g[k]];else if 10==e then r[d]=g[be]else r[d]=(r[be]/g[k]);end end else do if not(u[158]>6)then r[u[110]]=r[be][r[k]];else if 7==u[158]then local a do a={}end while#q>0 do for h=1,#q do local h=q[h]for i=0,#h do local h=h[i]local i=h[1]local j=h[2]if i==r and j>=0 then a[j]=i[j]h[1]=a end end end break end return r[d],true,u[m];else local a,h,i a=f[be]h=nil i={}h=bu({},{__index=function(f,f)local f=i[f];return f[1][f[2]];end,__newindex=function(f,f,j)local f=i[f]f[1][f[2]]=j;end;});for f=1,k do local j j=u[130][f]if j[1]then i[(f-1)]={r,j[2],nil,nil,nil};else i[(f-1)]={b,j[2],nil,nil};end;q[(#q+1)]=i;end;r[d]=ci(a,h,c);end end end end end else if not(e>17)then if not(e>14)then do if not(e<13)then do if(e>13)then local a,c,f,h do a=d end c,f=bq(r[a](bp(r,(a+1),be)))p=(f+a-1)h=0 do for f=a,p do h=(h+1);r[f]=c[h];end;end else do for a=u[110],be do r[a]=nil;end;end end end else r[d][g[u[108]]]=g[k];end end else if not(e>15)then do r[d]=(r[be]%g[k]);end else if(e<17)then r[d][r[be]]=r[k];else local a,c,f c=d do f={r[c](r[c+1])}end a=0 for h=c,k do do a=(a+1);end do r[h]=f[a];end end end end end else if not(e>20)then if not(e>18)then while(r[d]<r[k])do n=u[108];break end else do if(e<20)then local a,c c=d a=r[be]do r[(c+1)]=a;end r[c]=a[g[k]];else local a do a=d end do r[a]=r[a](bp(r,a+s,u[108]));end end end end else if not(e<22)then if(e<23)then do r[u[110]]=b[be];end else r[d]={};end else local a a=d do r[a]=r[a](bp(r,a+1,p));end end end end end end end end n=(n+1);end;end;end bc=1546 else if bc<1588 then bc=1590 return ci(bd(cg()),{},cg())();else bb=64;end end else if bc<=1388 then bd=function(a,b,b,b)local b,c,d,e,f,g,h,i=69,72,45,15,95,85,31,16,16,53,95,60,23,74,61,78,12,84,52,81,56,32,92 while b~=45 do if c>=354 then if c>=471 then if c<=500 then if c>473 then i[134]=e;c=520 else do for j=1,by()do local k,l,m,n,o,p=98,31,30,83,60,58,49,17,58,83,15,62,36,18,32,68,20,57,18,76,95,81,90,19,86 while k~=54 do if l<=272 then if l<=104 then if l<=48 then if l>34 then l=75 do p={{},nil}end else l=48 m,n,o,p=nil end else if l<96 then p[194]=bw();l=104 else p[130]={};l=148 end end else if l<=164 then if l<161 then l=164 if not(bw()~=1)then for q=1,bw()do do p[130][q]={bw()==0,by()}end end end else n=by()l=200 end else if l<=200 then l=245 o=by()else if l<266 then l=272 m=bo(n,1,2)else p[182]=m l=287 end end end end else if l>=399 then if l>=457 then if l>=505 then if l>513 then k=54;else l=543 do e[j]=p;end end else p[109]=-p[7]l=505 end else if l>406 then p[65]=-p[110]l=457 else l=418 p[198]=bo(n,12,20);end end else if l>=334 then if l>341 then p[7]=bo(n,21,29);l=399 else l=372 p[108]=bo(o,12,33);end else if l>292 then l=334 do p[110]=bo(n,3,11);end else do p[158]=bo(o,1,11);end l=317 end end end end end end end c=500 end else if c<=520 then c=539 i[153]=bw();else if c<569 then c=571 do return i;end else b=45;end end end else if c<=376 then if c>362 then i[174]=h c=408 else for b=1,f do local j,k,l,m=49,62,90,71,81,39,12,92,49,13,50,46,97,66 while j~=38 do if k>=182 then if k<=182 then k=227 if(not(m~=0))then l=(0~=bw());elseif(not(m~=1))then l=ce();elseif(not(m~=4))then l=cc();elseif(3==m)then l=a[cc()];end;else if k<245 then k=250 h[b]=l;else j=38;end end else if k<=62 then k=107 l,m=nil else if k>109 then k=182 l=nil else k=152 do m=bw()end end end end end end c=376 end else if c>414 then c=471 i[v]=d;else for a=1,by()do d[a-1]=bd();end c=438 end end end else if c<=149 then if c<=94 then if c>80 then c=134 e={}else d,e,f,g,h,i=nil c=94 end else if c<144 then d={}c=149 else i={}c=182 end end else if c<=228 then if c>186 then for a=(#bx+1),(#bx+g)do local b,d,e,i,j=68,60,81,33,17,31,22,50,19,75,61,86,17,87,79,22,42,64,43,32,89,33 while b~=53 do if d>=362 then if d<=427 then if d>=401 then if d>404 then d=445 j[108]=bo(i,12,33);else d=427 j[7]=bo(e,21,29);end else if d>364 then d=401 j[172]=bo(e,12,20);else d=383 do j[110]=bo(e,3,11);end end end else if d<=471 then if d>447 then d=505 do j[109]=-j[7]end else d=471 j[65]=-j[110]end else if d<535 then d=539 do bx[a]=j;end else break end end end else if d>=220 then if d<=260 then if d>227 then d=279 j[198]=bw();else d=260 i=by()end else if d<310 then d=317 j[182]=bo(e,1,2);else d=362 j[158]=bo(i,1,11);end end else if d<=108 then if d>66 then j={}d=137 else d=108 e,i,j=nil end else if d<167 then d=174 do j[194]=bw();end else d=220 e=by()end end end end end end c=267 else c=228 do g=by()end end else if c<311 then do f=by()end c=316 else c=354 h={}end end end end end end bc=1425 else if bc<1453 then bc=1461 br={}else bc=1500 do bt={}end end end end end else if bc>=988 then if bc>=1084 then if bc<=1084 then ca=1 bc=1133 else if bc>1135 then bc=1212 do bw=function()local a a=bi(bz,ca,ca)ca=(ca+1);return a;end end else bc=1164 by=function()local a,b,c,d b,a,c,d=bi(bz,ca,(ca+3))ca=(ca+4);return((d*16777216)+(c*65536)+(a*256)+b);end end end else if bc>=1023 then if bc>1032 then do bo=function(a,b,c,d,d,d)local d d=((a/2^(b-1))%2^((c-1)-(b-1)+1))return(d-d%1);end end bc=1084 else bc=1041 bm=(bit_lib and bit_lib.bxor or function(a,b)a=a%(2^y)b=b%(2^32)local c,d=0,1 while a>0 and b>0 do local e,f=a%16,b%z c=c+cj[e+1][f+1]*d a=(a-e)/t b=(b-f)/16 d=d*16 end c=c+a*d+b*d return c end)end else bc=1023 bv=function(a,b,c,d,d)local d,e,f=67,53,42,41,51,39,16,36,11,16,56,86,48,74,23 while d~=36 do if e<=113 then if e>=74 then if e>82 then e=140 f=((b/cm[a])%cm[c])else f=nil e=113 end else f=nil e=74 end else if e>=183 then if e<203 then e=210 do return f end else break end else f=(f-f%1)e=183 end end end end end end else if bc<=851 then if bc>817 then ch=(2^52)bc=887 else bk=''bc=851 end else if bc<=887 then bc=925 cm={[0]=w}else if bc<955 then bf=2 bc=962 else for a=1,31 do cm[a]=bf do bf=(bf*2)end end bc=988 end end end end end end end end)(20,4,7,0,13,11,0,12,0,110,10,41,0,13,5,12,11,14,1,16,2,39,1,65,32,16,3)
